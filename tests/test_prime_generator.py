from src.prime_generator import is_prime


def test_check_small_primes_true_positive():
    primes = [
        2, 3, 5, 7, 11, 13, 17, 19,
        23, 29, 31, 37, 41, 43, 47,
        53, 59, 61, 67, 71, 73, 79, 83,
        89, 97, 101, 103, 107, 109, 113,
        127, 131, 137, 139, 149, 151, 157,
        163, 167, 173, 179, 181, 191, 193,
        197, 199, 223, 227, 229, 233, 239,
        241, 251, 257, 263, 269, 271, 277,
        281, 283, 293, 307, 311, 313, 317,
        331, 337, 347, 349, 353, 359, 367,
        373, 379, 383, 389, 397, 401, 409,
        419, 421, 431, 433, 439, 443, 449,
        457, 461, 463, 467, 479, 487, 491,
        499, 503, 509, 521, 523, 541
    ]
    assert all([is_prime(prime) for prime in primes])

def test_check_large_primes_true_positive():
    primes = [
        82913307979904845921,
        13378481045096701657,
        78526074922196785651,
        95289378118175993777,
        49509041777326585477,
        42165055835053380083,
        19636426310600296207,
        78249474533001520783,
        90017855039845401967,
        84727321176535973629,
        37075441524223172957,
        17438378167683022553,
        64757024610193893701,
        32513989674663879539,
        51866960539611078821,
        456838049289599216084002417537,
        393322729008332639512747280951,
        479603216010067955882177326223,
        970187453134348581743268833261,
        948953368175908071161936070113,
        648551893712468239638086742001,
        201749803509322277146976018611,
        378757599118111890292545917503,
        653708546002894898212434173833,
        905406147224444287410534009181,
        3450412295166880818333267364033526111239,
        8264130245724693240332110298704603539733,
        6133053122396592319345475922877686614107,
        2936663294067697910314895478209373081473,
        7686566242177627480765581248765299701827,
        3978465809969847869559964139598506415451,
        6280561620200029198234937013083328139091,
        4576817602710117085823378867216140697360080355439713619967394836853568530056739539080346011297097909056352826876696093149975921161335119699802610880570869628681511868764037871303856968768910963680587877927033927291059317,
        2232975076584523315150063326161600695319811182889333278177511132926176075944921472853699964045812088756917667979227459020885740104468240437437852591115878480032252674576549873644242735551017583965691954942988807062880473,
7474683927545418327301289202420481787820368422682488830822871279057520265984490731376435053046723225781976854234072071386908806342738501290330366236395604043218539586496669492114147277734888556869409443889485729924318919
    ]
    assert all([is_prime(prime) for prime in primes])

def test_check_small_primes_false_negative():
    # Primes that are less than 500
    primes = [
        2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,
        97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181,
        191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281,
        283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,
        401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499
    ]

    for num in range(0, 500):
        if num not in primes: assert not is_prime(num)

def test_check_large_nonprimes():
    nonprimes = [
        10080133469205650945238900042460844101921449786438237301051323198561806350654263329889225201023884062306558152648148744378663166562486557984928979401909957,
        10834069134231481013637901478545831899979774604339482804746843117965148300465351685656988450801698582375759554477272123507303111765556041943230521822303191,
        9576871851619236938170860195523677797401262576173883632544369496444862938971894082500074356716284253537750484550644393467115327618517216657857929267088227
    ]

    assert all([not is_prime(num) for num in nonprimes])
